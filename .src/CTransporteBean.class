' Gambas class file

' 
' 

Private hconn As New Connection
Private hresul As Result

Public Sub _new()
    hconn = New Connection
End

Public Function ConectarBase() As Connection
    
    If Not Exist("/tmp/simplereservacion.bin") Then
    Copy "simplereservacion.bin" To "/tmp/simplereservacion.bin"
    Message.Warning("Base de datos no existe en ruta, usando una vacia, programa no andara bien")
    Endif
    If Not IsNull(hconn) Then
        If Not hconn.Opened Then
            hconn.Name = "simplereservacion.bin"
            hconn.Host = "/tmp/"
            hconn.Type = "sqlite3"
            hconn.Open
        Else
            If Comp(hconn.Name, "simplereservacion.bin", gb.IgnoreCase) == 0 Then
                hconn.Close
                Wait 1
                hconn.Name = "simplereservacion.bin"
                hconn.Host = "/tmp/"
                hconn.Type = "sqlite3"
                hconn.Open
            Endif
        Endif
    Endif

End


Public Function VerificarCredenciales(userin As String, clave As String) As Boolean

    Dim operacion As Boolean = False
    
    If Comp(userin, clave, gb.IgnoreCase) == 0 Then
        operacion = True
    Endif

    Return operacion

End


Public Function OtenerOrigenes() As Collection
    
    Dim hCollection As New Collection(gb.Binary)
    Dim valor As String = ""
    Dim indix As String = "0"
    'consulta sql: SELECT origen_id,origen_descripcion FROM tb_origen
    hresul = hconn.Find("tb_origen")
    'hresul = hconn.Exec("SELECT origen_id,origen_descripcion FROM tb_origen")
    Do While hresul.Available
        valor = hresul["origen_descripcion"]
        indix = hresul["origen_id"]
        hCollection[indix] = valor
    hresul.MoveNext()
    Loop
    Return hCollection
    
End

Public Function OtenerDestinos(Optional objetivo As String = "") As Collection
    
    Dim hCollection As New Collection(gb.Binary)
    Dim valor As String = ""
    Dim indix As String = "0"
    'consulta sql: SELECT destino_id,destino_descripcion FROM tb_destino
    hresul = hconn.Find("tb_destino")
    'hresul = hconn.Exec("SELECT destino_id,destino_descripcion FROM tb_destino")
    Do While hresul.Available
        valor = hresul["destino_descripcion"]
        indix = hresul["destino_id"]
        hCollection[indix] = valor
    hresul.MoveNext()
    Loop
    Return hCollection
    
End


Public Function ObtenerLineasAescoger(destino As String, origen As String) As Collection
    
    Dim hCollection As New Collection(gb.Binary)
    Dim valor As String = ""
    Dim indix As Integer = 0
    'consulta sql: SELECT linea_id,linea_descripcion FROM tb_linea WHERE linea_id in (SELECT destinoLinea_idLinea FROM tbr_destinoLinea WHERE destinoLinea_idCiudad = 'parametro'
    'hresul = hconn.Find("tb_line", "linea_id IN (select destinoLinea_idLinea from tbr_destinoLinea where destinoLinea_idCiudad = &1)", destino)
    hresul = hconn.Exec("SELECT linea_id,linea_descripcion FROM tb_line WHERE linea_id in (SELECT destinoLinea_idLinea FROM tbr_destinoLinea WHERE destinoLinea_idCiudad = '" & destino & "')")
    Do While hresul.Available
        valor = hresul["linea_descripcion"]
        indix = hresul["linea_id"]
        hCollection[indix] = valor
    hresul.MoveNext()
    Loop
    Return hCollection
    
End

Public Function ObtenerHorasLineasAescoger(destino As String, origen As String, linea As String) As Collection
    
    Dim hCollection As New Collection(gb.Binary)
    Dim valor As String = ""
    Dim indix As String = "0"
    'consulta sql: select hora_id,hora_descripcion from tb_hora_salida where hora_id in (select lineaHoraCiudad_idHora from tbr_lineaHoraCiudad where lineaHoraCiudad_idLinea = '" & linea & "' and lineaHoraCiudad_idCiudad='" & destino & "')
    hresul = hconn.Exec("select hora_id,hora_descripcion from tb_hora_salida where hora_id in (select lineaHoraCiudad_idHora from tbr_lineaHoraCiudad where lineaHoraCiudad_idLinea = '" & linea & "' and lineaHoraCiudad_idCiudad='" & destino & "')")
    Do While hresul.Available
        valor = hresul["hora_descripcion"] '"Local" es el nombre del campo, que queremos leer sus datos
        indix = hresul["hora_id"]
         hCollection[indix] = valor
    hresul.MoveNext()
    Loop
    Return hCollection
    
End

Public Function ObtenerDiasLineasAescoger(destino As String, origen As String, linea As String, hora As String) As Integer
    
    Dim LimiteDias As Integer
    Dim valor As String = ""
    Dim indix As String = "0"
    'consulta sql: por ahora cualquier linea se puede saturar, solo limitar a 3 dias adelante
    'hresul = hconn.Exec("select hora_id,hora_descripcion from tb_hora_salida where hora_id in (select lineaHoraCiudad_idHora from tbr_lineaHoraCiudad where lineaHoraCiudad_idLinea = '" & linea & "' and lineaHoraCiudad_idCiudad='" & destino & "')")
    'recorro todo el resultado que se han producido en la consulta, y cargo los datos en el comboBox
    'Do While hresul.Available
    '    valor = hresul["hora_descripcion"] '"Local" es el nombre del campo, que queremos leer sus datos
    '    indix = hresul["hora_id"]
    '    LimiteDias.Add(valor, indix)
    'hresul.MoveNext()
    'Loop
    LimiteDias = Val(Format$(Now, "yyyymmdd")) + 3
    Return LimiteDias
    
End


Public Function OptenerPrecio(destino As String, origen As String, linea As String) As Integer
    
    Dim valor As Integer = 0
    'consulta sql: obtener los valores del campo "valor" de la tabla "tbr_destinolinea", sin duplicarlos, ordenados Ascendentemente
    hresul = hconn.Find("tbr_destinolinea", "destinoLinea_idCiudad = &1 AND destinoLinea_idLinea = &2", destino, linea)
    'recorro todo el resultado que se han producido en la consulta, y cargo los datos en el comboBox
    Do While hresul.Available
        valor = hresul["valor"] '"Local" es el nombre del campo, que queremos leer sus datos
        Break
    Loop
    Return valor
    
End

Public Function RealizarReservacion(id_reserva As String, cedula As String, nombre As String, apellido As String, origen As String, destino As String, linea As String, horaSalida As String, fechaSalida As String, fechaSistema As String, monto As Float, ubicacion As String) As Result
    hresul = hconn.Exec("insert into tb_reservacion values ('" & id_reserva & "','" & cedula & "','" & apellido & "','" & nombre & "','" & origen & "','" & destino & "','" & linea & "','" & fechaSistema & "','" & fechaSalida & "','" & fechaSistema & "','" & horaSalida & "'," & monto & ",'" & ubicacion & "') ")
End

Public Function DetalleReservacion(idreserva As String) As Result
    hresul = hconn.exec("select *  from tb_reservacion where reservacion_id='" & idreserva & "'")
    Return hresul
End


Public Function ResultadoReporte(fecha As Date) As Result
    hresul = hconn.Find("tb_reservacion", "reservacion_fecha_reserva =&1", Format(fecha, "yyyymmdd"))
    Return hresul
End



Public Function CerrarReservaciones() As Variant
    ' TODO
    Message.Error("No se ha cerrado el dia de reservaciones aun...")
    Return False
    
End
