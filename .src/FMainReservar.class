' Gambas class file

Private operaciones As CTransporteBean
Private $hReportCierre As Report
Private $hReportReserva As Report

Public Sub _new()
    operaciones = New CTransporteBean
End


Private Sub desabilitarControles()
    Me.PanelControls.Enabled = False
    Me.PanelLogin.Enabled = True
    Me.PanelLogin.Visible = True
    Me.ButtonLogin.Visible = True
    Me.ButtonClose.Visible = False
End

Private Sub habilitarControles()
    Me.PanelControls.Enabled = True
    Me.PanelLogin.Enabled = False
    Me.PanelLogin.Visible = False
    Me.ButtonLogin.Visible = False
    Me.ButtonClose.Visible = True
End


Public Sub Form_Open()
    'desabilitarControles
    operaciones.ConectarBase()
    'prepararControles
            habilitarControles
        prepararControles
        rellenarControles
End


Public Sub ButtonLogin_Click()

    'If operaciones.VerificarCredenciales(Me.TextLoginName.Text, Me.TextLoginPass.Text) Then
        habilitarControles
        prepararControles
        rellenarControles
    Print Val(Format$(Now, "yyyymmdd"))
    Print Val(Format$(Now, "hh:mm:ss"))
    'Else
    '    desabilitarControles
    'Endif

End



Private Sub prepararControles()
    ButtonClose.Text = "Cerrar"
    ButtonLogin.Text = "Iniciar"
    ' panel de login
    TextLabelName.Text = "Usuario"
    TextLabelPass.Text = "Contrase√±a"
    TextLoginName.Text = "ingrese usuario"
    TextLoginPass.Text = "ingrese clave"
    ' panel de gestion
    TextLabelCedula.Text = "C. I. identificacion"
    TextLabelNombre.Text = "Nombre"
    TextLabelApellido.Text = "Apellido"
    TextLabelLinOrig.Text = "Origen"
    TextLabelLinDest.Text = "Destino"
    TextLabelLineaTransporte.Text = "Linea Transporte"
    TextLabelHoraSalida.Text = "Hora de salida"
    TextBoxCedula.Text = ""
    TextBoxNombre.Text = ""
    TextBoxApellido.Text = ""
    ComboBoxLinOrig.Text = "Seleccione origen"
    ComboBoxLinDest.Text = "Seleccione destino"
    ComboBoxLineaTransporte.Text = "Seleccione Linea"
    ComboBoxHoraSalida.Text = "Escoja hora salir"
    ButtonReservar.Text = "Reservar pasaje"
    ComboBoxLinOrig.ReadOnly = True
    ComboBoxLinDest.ReadOnly = True
    ComboBoxLineaTransporte.ReadOnly = True
    ComboBoxHoraSalida.ReadOnly = True
    TextLabelPrecio.Text = ""
    TextLabelPrecio.Visible = False
End

Private Sub rellenarControles() ' solo usar p
    Dim objetivoorigen As New Collection
    Dim objetivodestino As New Collection
    Dim lineasaescoger As New Collection
    Dim horasaescoger As New Collection
    Dim cadalineacombo As String
    ComboBoxLinOrig.Clear
    ComboBoxLinDest.Clear
    ComboBoxLineaTransporte.Clear
    ComboBoxHoraSalida.Clear
    ComboBoxLinOrig.Add("Seleccione origen")
    ComboBoxLinDest.Add("Seleccione destino")
    objetivoorigen = operaciones.OtenerOrigenes()
    For Each cadalineacombo In objetivoorigen
        Me.ComboBoxLinOrig.Add(cadalineacombo)
    Next
    objetivodestino = operaciones.OtenerDestinos()
    For Each cadalineacombo In objetivodestino
        Me.ComboBoxLinDest.Add(cadalineacombo)
    Next
    lineasaescoger = operaciones.ObtenerLineasAescoger("*", "*")
    For Each cadalineacombo In lineasaescoger
        Me.ComboBoxLineaTransporte.Add(cadalineacombo)
    Next
    horasaescoger = operaciones.ObtenerHorasLineasAescoger("*", "*", "*")
    For Each cadalineacombo In horasaescoger
        Me.ComboBoxHoraSalida.Add(cadalineacombo)
    Next
End

Private Function ValidarFechaReserva(Optional fecha As Date)
    Dim valido As Integer = 0
    valido = DateDiff(Date(Now), fecha, gb.Day)
    If valido < 3 Then
        Message.Error("Selecione un dia mayor, debe reservar en el futuro")
    Endif
End


Public Sub ButtonClose_Click()
    Dim salir As Boolean = False
    salir = operaciones.CerrarReservaciones()
    If salir Then
        Me.Form_Open
    Else
        Return
    Endif
End



Public Sub ButtonReport_Click()
    $hReportCierre = New RCierrereDiario
    $hReportCierre.Preview()
End


Public Sub ButtonReservar_Click()
    $hReportReserva = New RReserva("11") ' pasar id de l reserva, del label text reservaid TODO
    $hReportReserva.Preview()
End

Public Sub ComboBoxLinOrig_Click() ' ComboBoxLinOrig_Change ComboBoxLinOrig_Click
    ' cambiar este por ComboBoxLinOrig_Click si no te gustase
    Dim seleccionorigen As String
    Dim objetivodestino As New Collection
    Dim lineasaescoger As New Collection
    Dim horasaescoger As New Collection
    Dim cadalineacombo As String
    ' reinicio de opciones segun lo seleccionado en origen
    seleccionorigen = ComboBoxLinOrig.Index
    ComboBoxLinDest.Clear
    ComboBoxLineaTransporte.Clear
    ComboBoxHoraSalida.Clear
    ComboBoxLinDest.Add("Seleccione destino")
    ComboBoxLineaTransporte.Add("Seleccione Linea")
    ComboBoxHoraSalida.Add("Escoja hora salir")
    ' rellenado respecto la seleccion de origen
    objetivodestino = operaciones.OtenerDestinos(seleccionorigen)
    If objetivodestino.Length > 0 Then
        For Each cadalineacombo In objetivodestino
            'Me.ComboBoxLinDest.Add(objetivodestino["destino_descripcion"], objetivodestino["destino_id"])
            Me.ComboBoxLinDest.Add(cadalineacombo, CInt(objetivodestino.Key))
        Next
    Endif
End


Public Sub ComboBoxLinDest_Click()
    ' cambiar este por ComboBoxLinOrig_Click si no te gustase
    Dim seleccionorigen As String
    Dim selecciondestin As String
    Dim objetivolineas As New Collection
    Dim horasaescoger As New Collection
    Dim cadalineacombo As String
    ' reinicio de opciones segun lo seleccionado en origen
    seleccionorigen = ComboBoxLinOrig.Index
    selecciondestin = ComboBoxLinDest.Index
    ComboBoxLineaTransporte.Clear
    ComboBoxHoraSalida.Clear
    ComboBoxLineaTransporte.Add("Seleccione Linea")
    ComboBoxHoraSalida.Add("Escoja hora salir")
    ' lineas que van a el destino respecto la seleccion de destino
    objetivolineas = operaciones.ObtenerLineasAescoger(selecciondestin, seleccionorigen)
    If objetivolineas.Length > 0 Then
        For Each cadalineacombo In objetivolineas
            'Me.ComboBoxLineaTransporte.Add(objetivolineas["linea_descripcion"], objetivolineas["linea_id"])
            Me.ComboBoxLineaTransporte.Add(cadalineacombo, CInt(objetivolineas.Key))
        Next
    Endif
End

Public Sub ComboBoxLineaTransporte_Click()
' cambiar este por ComboBoxLinOrig_Click si no te gustase
    Dim seleccionorigen As String
    Dim selecciondestin As String
    Dim seleccionlinea As String
    Dim horaobjetivo As New Collection
    Dim cadalineacombo As String
    ' reinicio de opciones segun lo seleccionado en origen
    seleccionorigen = ComboBoxLinOrig.Index
    selecciondestin = ComboBoxLinDest.Index
    seleccionlinea = ComboBoxLineaTransporte.Index
    ComboBoxHoraSalida.Clear
    ComboBoxHoraSalida.Add("Escoja hora salir")
    ' lineas que van a el destino respecto la seleccion de destino
    horaobjetivo = operaciones.ObtenerHorasLineasAescoger(selecciondestin, seleccionorigen, seleccionlinea)
    If horaobjetivo.Length > 0 Then
        For Each cadalineacombo In horaobjetivo
            'Me.ComboBoxHoraSalida.Add(horaobjetivo["hora_descripcion"], horaobjetivo["hora_id"])
            Me.ComboBoxHoraSalida.Add(cadalineacombo, CInteger(horaobjetivo.Key))
        Next
    Endif
    TextLabelPrecio.Text = operaciones.OptenerPrecio(selecciondestin, seleccionorigen, seleccionlinea)
End

Public Sub ComboBoxHoraSalida_Click()
    Dim seleccionorigen As String
    Dim selecciondestin As String
    Dim seleccionlinea As String
    Dim seleccionhorasal As String
    Dim diaobjetivo As Integer
    ' reinicio de opciones segun lo seleccionado en origen
    seleccionorigen = ComboBoxLinOrig.Index
    selecciondestin = ComboBoxLinDest.Index
    seleccionlinea = ComboBoxLineaTransporte.Index
    seleccionhorasal = ComboBoxHoraSalida.Index
    ' lineas que van a el destino respecto la seleccion de destino
    diaobjetivo = operaciones.ObtenerDiasLineasAescoger(selecciondestin, seleccionorigen, seleccionlinea, seleccionhorasal)
    'For Each diaobjetivo
    '    'Me.ComboBoxHoraSalida.Add(diaobjetivo["hora_descripcion"], diaobjetivo["hora_id"])
    '    Me.ComboBoxHoraSalida.Add(diaobjetivo)
    'Next
    ' por ahora esto se limita a saturar l linea siempre qu sea 3 dias adelant
    'DateChooserFechaSalida = Val(Format$(Now, "yyyymmddHHMMss")) + 3
End


Public Sub DateChooserFechaSalida_Change()
    ValidarFechaReserva(DateChooserFechaSalida.Value)
End


